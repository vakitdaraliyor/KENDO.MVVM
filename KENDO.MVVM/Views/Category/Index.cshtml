
@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}

@*<div class="container" id="form">
    <div class="form mt-5">
        <dl>
            <dt>Category</dt>
            <dd>
                <select id="category"
                        data-role="dropdownlist"
                        data-bind="source: category, value: selectedCategory"
                        data-text-field="name"
                        data-value-field="value">
                </select>
            </dd>

            <dt>Product Name</dt>
            <dd>
                <input id="productName" type="text"
                        class="k-textbox"
                        data-bind="value: productName"/>
            </dd>

            <dt>Amount</dt>
            <dd>
                <input id="amount" type="text" 
                        class="k-textbox"
                        data-bind="value: amount"/>
            </dd>

            <dt>&nbsp;</dt>
            <dd>
                <button id="create" class="k-button"
                        data-bind="click: create">Add</button>
            </dd>
        </dl>
    </div>

    <div data-role="grid"
            data-bind="source: model"
            data-columns='["Category", "ProductName", "Amount"]'>
            
    </div>
</div>*@

    

@*<script>

    // this is my Model
    var products = new kendo.data.ObservableArray([])

    // this is my ViewModel
    var productViewModel = new kendo.data.ObservableObject({
        model: products, // your model is products

        // category dropdownlist
        category: [
            { name: "Food", value: "food" },
            { name: "Drink", value: "drink" },
            { name: "Mix", value: "mix" }
        ],

        // selectedCategory holds the currently selected value of category
        selectedCategory: "Food",
        productName: null,
        amount: null,

        create: function (e) {
            //add the items to the array of products
            this.get("model").push({
                Category: this.get("selectedCategory"),
                ProductName: this.get("productName"),
                Amount: this.get("amount")
            });

            // clear form
            this.set("selectedCategory", "Food");
            this.set("productName", "");
            this.set("amount", "");
        }
    })

    // apply bindings
    kendo.bind($("#form"), productViewModel);

    // eski sekil ekleme
    //$(document).ready(function () {
    //    $("#create").on("click", function () {
    //        $("#products").append("<tr><td>" + $("#category option:selected").text() +
    //                              "</td><td>" + $("#productName").val() + 
    //                              "</td><td>" + $("#amount").val() + 
    //                              "</td></tr>");

    //        // clear form
    //        $("#category").val("Food");
    //        $("#productName").val("");
    //        $("#amount").val("");
    //    });
    //});
</script>*@






<div class="container">    
    <div id="category">
        <div class="row justify-content-md-center mt-5">            
            <div class="col-md-6">
                <h3>Category List</h3>
                <a class="btn btn-outline-primary btn-sm" href="/Category/CreateCategory">Add New Category</a>
                <div class="mt-2" data-role="grid"
                     data-columns="[{'field': 'categoryId', 'title': 'Category Id'}, {'field': 'categoryName', 'title': 'Category Name'}]"
                     data-bind="source: categories"
                     style="height:200px; width:500px;">
                </div>
            </div>
        </div>

        <script>
            var categoryListViewModel = kendo.observable({
                categories: new kendo.data.DataSource({
                    schema: {
                        model: {
                            id: "CategoryId",
                            fields: {
                                categoryId: { type: "string" },
                                categoryName: { type: "string" }
                            }
                        }
                    },
                    batch: true,
                    transport: {
                        read: {
                            url: "/Category/CategoryList",
                            type: "get",
                            contentType: "application/json",
                            dataType: "json"
                        }
                    }
                })
            });
            kendo.bind($("#category"), categoryListViewModel);
            console.log(categoryListViewModel);
        </script>

    </div>
</div>

